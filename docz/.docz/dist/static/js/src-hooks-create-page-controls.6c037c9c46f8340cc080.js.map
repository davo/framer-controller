{"version":3,"sources":["webpack:///./src/hooks/createPageControls.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className"],"mappings":"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","file":"static/js/src-hooks-create-page-controls.c1cb1bc0.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"createpagecontrols\"}}>{`createPageControls`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{` function returns a hook, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{`, that you\ncan use to control a page component. This hook provides an `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`alternative`}</MDXTag>{` to\nPageController.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Follow the steps below to get started. The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` section documents\nthe `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` hook in more detail. At the end of this page, you'll find\na complete example that uses each method.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-create-the-hook\"}}><MDXTag name=\"strong\" components={components} parentName=\"h3\">{`1.`}</MDXTag>{` Create the hook`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In an overrides file, import `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{` from the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`framer-controller`}</MDXTag>{`\nlibrary as shown below. Next, call `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{` and store the returned\nhook under the name `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`import { Override } from 'framer'\nimport { createPageControls } from 'framer-controller'\n\nconst usePageControls = createPageControls()\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you wish, you can also pass `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{` an object of (optional)\noptions.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`const usePageControls = createPageControls({\n    loop: true,\n    currentPage: 2,\n    history: [1, 2, 5, 2],\n})\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-connect-a-page-component\"}}><MDXTag name=\"strong\" components={components} parentName=\"h3\">{`2.`}</MDXTag>{` Connect a Page component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Next, override the page component you wish to control. Call `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{`\ninside of the override and pass the returned values `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`currentPage`}</MDXTag>{` and\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onChangePage`}</MDXTag>{` to the component.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-control-the-page-component\"}}><MDXTag name=\"strong\" components={components} parentName=\"h3\">{`3.`}</MDXTag>{` Control the Page component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`From here on, you can control the Page component in any other override by\ncalling the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` hook from your override and using the properties\nand methods that it returns.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function NextButton(props): Override {\n    const { snapToNextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToNextPage(),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"usepagecontrols\"}}>{`usePageControls`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once you've created a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` hook (using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{`), you\ncan call `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` from inside of an override. Doing do will return a\ncollection of `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`properties`}</MDXTag>{`, `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`event handlers`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`methods`}</MDXTag>{` for controlling\nthe Page component or interpreting its state.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage-1\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`At minimum, you should call this hook from your Page component's override as\nshown below. This will connect your Page component's `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`currentPage`}</MDXTag>{` to the hook's\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`currentPage`}</MDXTag>{`, as well as guarantee that these stay in sync as the user swipes\nbetween pages.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Note that in the example above, we're calling the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` hook with\nthe `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{` of the Page component. You only have to do this with the Page\ncomponent's props. In the other examples, we call this hook without any\nargument.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"properties\"}}>{`Properties`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-currentpage-number\"}}>{`🍊 currentPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`number`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The component's current page (as determined by the hook).`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageNumber(props): Override {\n    const { currentPage } = usePageControls()\n\n    return {\n        text: currentPage,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"event-handlers\"}}>{`Event Handlers`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-onchangepage-currentpage-number--void\"}}>{`🍊 onChangePage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`(currentPage: number) => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Updates the hook when the user changes the Page component's current page.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Though you can pass this property directly to your Page component's\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onChangePage`}</MDXTag>{` prop, you mmight want to do other things in your component's\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onChangePage`}</MDXTag>{` event, too. In that case, you can also call this method like\nthis:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage: (currentPage) => {\n            // other stuff\n            onChangePage(currentPage)\n        },\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"methods\"}}>{`Methods`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-snaptopage-index-number--0--void\"}}>{`🍊 snapToPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`(index: number = 0) => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the page at the provided index. Defaults to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function Page2Button(props): Override {\n    const { snapToPage, nextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToPage(2),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-snaptonextpage-direction-right--left--right--void\"}}>{`🍊 snapToNextPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`(direction: 'right' | 'left' = 'right') => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the next page in a given direction, either `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"right\"`}</MDXTag>{`\nor `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"left\"`}</MDXTag>{`. Defaults to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"right\"`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function RightButton(props): Override {\n    const { snapToNextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToNextPage(),\n    }\n}\n\nexport function LeftButton(props): Override {\n    const { snapToNextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToNextPage('left'),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-snaptopreviouspage---void\"}}>{`🍊 snapToPreviousPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`() => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the previous page in the hook's \"history\" of visited\npages.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PrevButton(props): Override {\n    const { snapToPreviousPage } = usePageControls()\n\n    return {\n        onTap: () => snapToPreviousPage(),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-snaptoprogress-progress-number--void\"}}>{`🍊 snapToProgress `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`(progress: number) => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the nearest page to a given \"progress\" value, where\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{` is the Page component's first page and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`1`}</MDXTag>{` is the last.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function MiddleButton(props): Override {\n    const { snapToProgress } = usePageControls()\n\n    return {\n        onTap: () => snapToProgress(0.5),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-nextpage-direction-right--left--right--number--null\"}}>{`🍊 nextPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`(direction: 'right' | 'left' = 'right') => number | null`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Returns the index of the next page in the given direction, or else `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`null`}</MDXTag>{` if no\npage exists in that direction.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function NextIndicator(props): Override {\n    const { nextPage } = usePageControls()\n\n    return {\n        opacity: nextPage() === null ? 0.5 : 1,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-previouspage---number--null\"}}>{`🍊 previousPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`() => number | null`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Returns the index of the previous page in the hook's \"history\" of visited pages,\nor else `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`null`}</MDXTag>{` if no page exists.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function BackIndicator(props): Override {\n    const { previousPage } = usePageControls()\n\n    return {\n        opacity: previousPage() === null ? 0.5 : 1,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`import { Override } from 'framer'\nimport { createPageControls } from 'framer-controller'\n\nconst usePageControls = createPageControls()\n\n// Sync the component with the usePageControls hook\nexport function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage,\n    }\n}\n\n// Move to the next page (right)\nexport function NextButton(props): Override {\n    const { snapToNextPage, nextPage } = usePageControls()\n\n    return {\n        opacity: nextPage('right') === null ? 0.3 : 1,\n        onTap: () => snapToNextPage(),\n    }\n}\n\n// Move to the next page (left)\nexport function PrevButton(props): Override {\n    const { snapToNextPage, nextPage } = usePageControls()\n\n    return {\n        opacity: nextPage('left') === null ? 0.3 : 1,\n        onTap: () => snapToNextPage('left'),\n    }\n}\n\n// Show the current page number\nexport function PageNumber(props): Override {\n    const { currentPage, nextPage } = usePageControls()\n\n    return {\n        text: currentPage + 1,\n    }\n}\n\n// Jump to start (progress 0)\nexport function ToStart(props): Override {\n    const { snapToProgress } = usePageControls()\n\n    return {\n        onTap: () => snapToProgress(0),\n    }\n}\n\n// Jump to end (progress 1)\nexport function ToEnd(props): Override {\n    const { snapToProgress } = usePageControls()\n\n    return {\n        onTap: () => snapToProgress(1),\n    }\n}\n\n// Show the previous page (in history)\nexport function Undo(props): Override {\n    const { snapToPreviousPage, previousPage } = usePageControls()\n\n    return {\n        opacity: previousPage() === null ? 0.3 : 1,\n        onTap: () => snapToPreviousPage(),\n    }\n}\n\n// Show a progress bar\nexport function ProgressBar(props): Override {\n    const { progress, currentPage, pages } = usePageControls()\n\n    const background =\n        pages[currentPage] && pages[currentPage].props.background.initialValue\n\n    return {\n        animate: {\n            background,\n            width: props.width * progress,\n        },\n    }\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}