(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./src/controllers/Controller.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return d});var a=n("./node_modules/react/index.js"),o=n.n(a),r=n("./node_modules/@mdx-js/tag/dist/index.js");function m(e){return(m="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function l(e,t){return!t||"object"!==m(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var d=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=l(this,s(t).call(this,e))).layout=null,n}var n,a,m;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}(t,o.a.Component),n=t,(a=[{key:"render",value:function(){var e=this.props,t=e.components;p(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:t},o.a.createElement(r.MDXTag,{name:"h1",components:t,props:{id:"controller"}},"Controller"),o.a.createElement(r.MDXTag,{name:"p",components:t},"A ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"Controller")," maintains state for an arbitrary set of properties."),o.a.createElement(r.MDXTag,{name:"p",components:t},"When a controller is created, all properties passed into its constructor will be\nstored in state."),o.a.createElement(r.MDXTag,{name:"table",components:t},o.a.createElement(r.MDXTag,{name:"thead",components:t,parentName:"table"},o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"thead"},o.a.createElement(r.MDXTag,{name:"th",components:t,parentName:"tr",props:{align:"left"}},"Property"),o.a.createElement(r.MDXTag,{name:"th",components:t,parentName:"tr",props:{align:"left"}},"Type"),o.a.createElement(r.MDXTag,{name:"th",components:t,parentName:"tr",props:{align:"left"}},"Description"))),o.a.createElement(r.MDXTag,{name:"tbody",components:t,parentName:"table"},o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"state"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"object"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"The controller's current state.")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"connected"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"any"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"Any data stored using the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"td"},"connect")," method.")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"animation"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},o.a.createElement(r.MDXTag,{name:"a",components:t,parentName:"td",props:{href:"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/animejs/index.d.ts#L77"}},"AnimeInstance")),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"Any data stored using the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"td"},"connect")," method.")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"isAnimating"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"Whether the controller's current animation is animating."),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}})))),o.a.createElement(r.MDXTag,{name:"table",components:t},o.a.createElement(r.MDXTag,{name:"thead",components:t,parentName:"table"},o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"thead"},o.a.createElement(r.MDXTag,{name:"th",components:t,parentName:"tr",props:{align:"left"}},"Method"),o.a.createElement(r.MDXTag,{name:"th",components:t,parentName:"tr",props:{align:"left"}},"Description"))),o.a.createElement(r.MDXTag,{name:"tbody",components:t,parentName:"table"},o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"setState(state)"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"Merges the provided values into the controller's ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"td"},"state"),".")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"animate(options, path?)"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"Animate the controller's state. Uses ",o.a.createElement(r.MDXTag,{name:"a",components:t,parentName:"td",props:{href:"https://animejs.com/"}},o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"animejs")),". If animating an object property, use the key of the object property as the second parameter. (e.g. If animating the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"td"},"top")," property of ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"td"},"controller.state.something"),", use ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"td"},"controller.animate({top: 100}, 'something')"),".) Returns an anime instance that can be paused and resumed.")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"connect(data)"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"Stores the provided ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"td"},"data")," as the controller's ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"td"},"connected")," property.")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"reset()"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"Resets the controller to its initial state.")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"stopAnimation()"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"Stop any current animation.")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"pauseAnimation()"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"Pause any current animation.")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"resumeAnimation()"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"Resume any current animation.")))),o.a.createElement(r.MDXTag,{name:"p",components:t},"In addition, the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"Controller")," class has three ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"protected")," life cycle methods. If\nyou're writing a class that extends ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"Controller"),", you can overwrite these\nmethods in your class."),o.a.createElement(r.MDXTag,{name:"table",components:t},o.a.createElement(r.MDXTag,{name:"thead",components:t,parentName:"table"},o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"thead"},o.a.createElement(r.MDXTag,{name:"th",components:t,parentName:"tr",props:{align:"left"}},"Protected Method"),o.a.createElement(r.MDXTag,{name:"th",components:t,parentName:"tr",props:{align:"left"}},"Description"))),o.a.createElement(r.MDXTag,{name:"tbody",components:t,parentName:"table"},o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"onUpdate(state: State, connected: any)"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"A lifecycle method fired when the controller's state updates.")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"onConnect(state: State, connected: any)"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"A lifecycle method fired when the controller connects to data.")),o.a.createElement(r.MDXTag,{name:"tr",components:t,parentName:"tbody"},o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"onReset(state: State, connected: any)"),o.a.createElement(r.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:"left"}},"A lifecycle method fired when the controller resets its state.")))),o.a.createElement(r.MDXTag,{name:"p",components:t},"Example:"),o.a.createElement(r.MDXTag,{name:"pre",components:t},o.a.createElement(r.MDXTag,{name:"code",components:t,parentName:"pre",props:{className:"language-tsx"}},"const controller = new Controller({\n    darkMode: false,\n})\n\nconst Interface: Override = () => ({\n    darkMode: controller.state.darkMode,\n})\n\nconst ToggleModeButton: Override = () => ({\n    onClick: () => {\n        const { darkMode } = controller.state\n        controller.setState({\n            darkMode = !darkMode,\n        })\n    },\n})\n")))}}])&&c(n.prototype,a),m&&c(n,m),t}();d.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=src-controllers-controller.3df69c158a395a1eb4ee.js.map