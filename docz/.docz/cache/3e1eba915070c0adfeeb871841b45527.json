{"remainingRequest":"/Users/stephenruiz/GitHub/framer-controller/docz/node_modules/docz/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/stephenruiz/GitHub/framer-controller/docz/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/stephenruiz/GitHub/framer-controller/docz/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/stephenruiz/GitHub/framer-controller/docz/src/hooks/createPageControls.mdx","dependencies":[{"path":"/Users/stephenruiz/GitHub/framer-controller/docz/src/hooks/createPageControls.mdx","mtime":1558200230586},{"path":"/Users/stephenruiz/GitHub/framer-controller/docz/node_modules/cache-loader/dist/cjs.js","mtime":1558188545990},{"path":"/Users/stephenruiz/GitHub/framer-controller/docz/node_modules/docz/node_modules/babel-loader/lib/index.js","mtime":1556118752233}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var layoutProps={};var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"createpagecontrols\"}},\"createPageControls\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"createPageControls\"),\" function returns a hook, \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\", that you\\ncan use to control a page component. This hook provides an \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"alternative\"),\" to\\nPageController.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Follow the steps below to get started. The \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\" section documents\\nthe \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\" hook in more detail. At the end of this page, you'll find\\na complete example that uses each method.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"usage\"}},\"Usage\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"1-create-the-hook\"}},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"h3\"},\"1.\"),\" Create the hook\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In an overrides file, import \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"createPageControls\"),\" from the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"framer-controller\"),\"\\nlibrary as shown below. Next, call \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"createPageControls\"),\" and store the returned\\nhook under the name \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"import { Override } from 'framer'\\nimport { createPageControls } from 'framer-controller'\\n\\nconst usePageControls = createPageControls()\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If you wish, you can also pass \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"createPageControls\"),\" an object of (optional)\\noptions.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"const usePageControls = createPageControls({\\n    loop: true,\\n    currentPage: 2,\\n    history: [1, 2, 5, 2],\\n})\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"2-connect-a-page-component\"}},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"h3\"},\"2.\"),\" Connect a Page component\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Next, override the page component you wish to control. Call \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\"\\ninside of the override and pass the returned values \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"currentPage\"),\" and\\n\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"onChangePage\"),\" to the component.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function PageComponent(props): Override {\\n    const { currentPage, onChangePage } = usePageControls(props)\\n\\n    return {\\n        currentPage,\\n        onChangePage,\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"3-control-the-page-component\"}},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"h3\"},\"3.\"),\" Control the Page component\"),React.createElement(MDXTag,{name:\"p\",components:components},\"From here on, you can control the Page component in any other override by\\ncalling the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\" hook from your override and using the properties\\nand methods that it returns.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function NextButton(props): Override {\\n    const { snapToNextPage } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToNextPage(),\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"usepagecontrols\"}},\"usePageControls\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Once you've created a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\" hook (using \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"createPageControls\"),\"), you\\ncan call \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\" from inside of an override. Doing do will return a\\ncollection of \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"properties\"),\", \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"event handlers\"),\" and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"methods\"),\" for controlling\\nthe Page component or interpreting its state.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"usage-1\"}},\"Usage\"),React.createElement(MDXTag,{name:\"p\",components:components},\"At minimum, you should call this hook from your Page component's override as\\nshown below. This will connect your Page component's \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"currentPage\"),\" to the hook's\\n\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"currentPage\"),\", as well as guarantee that these stay in sync as the user swipes\\nbetween pages.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function PageComponent(props): Override {\\n    const { currentPage, onChangePage } = usePageControls(props)\\n\\n    return {\\n        currentPage,\\n        onChangePage,\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Note that in the example above, we're calling the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\" hook with\\nthe \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"props\"),\" of the Page component. You only have to do this with the Page\\ncomponent's props. In the other examples, we call this hook without any\\nargument.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"properties\"}},\"Properties\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-currentpage-number\"}},\"\\uD83C\\uDF4A currentPage \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"h3\"},\"number\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The component's current page (as determined by the hook).\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function PageNumber(props): Override {\\n    const { currentPage } = usePageControls()\\n\\n    return {\\n        text: currentPage,\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"event-handlers\"}},\"Event Handlers\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-onchangepage-currentpage-number--void\"}},\"\\uD83C\\uDF4A onChangePage \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"h3\"},\"(currentPage: number) => void\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Updates the hook when the user changes the Page component's current page.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function PageComponent(props): Override {\\n    const { currentPage, onChangePage } = usePageControls(props)\\n\\n    return {\\n        currentPage,\\n        onChangePage,\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Though you can pass this property directly to your Page component's\\n\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"onChangePage\"),\" prop, you mmight want to do other things in your component's\\n\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"onChangePage\"),\" event, too. In that case, you can also call this method like\\nthis:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function PageComponent(props): Override {\\n    const { currentPage, onChangePage } = usePageControls(props)\\n\\n    return {\\n        currentPage,\\n        onChangePage: (currentPage) => {\\n            // other stuff\\n            onChangePage(currentPage)\\n        },\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"methods\"}},\"Methods\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-snaptopage-index-number--0--void\"}},\"\\uD83C\\uDF4A snapToPage \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"h3\"},\"(index: number = 0) => void\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Snaps the page component to the page at the provided index. Defaults to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"0\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function Page2Button(props): Override {\\n    const { snapToPage, nextPage } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToPage(2),\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-snaptonextpage-direction-right--left--right--void\"}},\"\\uD83C\\uDF4A snapToNextPage \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"h3\"},\"(direction: 'right' | 'left' = 'right') => void\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Snaps the page component to the next page in a given direction, either \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"\\\"right\\\"\"),\"\\nor \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"\\\"left\\\"\"),\". Defaults to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"\\\"right\\\"\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function RightButton(props): Override {\\n    const { snapToNextPage } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToNextPage(),\\n    }\\n}\\n\\nexport function LeftButton(props): Override {\\n    const { snapToNextPage } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToNextPage('left'),\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-snaptopreviouspage---void\"}},\"\\uD83C\\uDF4A snapToPreviousPage \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"h3\"},\"() => void\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Snaps the page component to the previous page in the hook's \\\"history\\\" of visited\\npages.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function PrevButton(props): Override {\\n    const { snapToPreviousPage } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToPreviousPage(),\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-snaptoprogress-progress-number--void\"}},\"\\uD83C\\uDF4A snapToProgress \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"h3\"},\"(progress: number) => void\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Snaps the page component to the nearest page to a given \\\"progress\\\" value, where\\n\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"0\"),\" is the Page component's first page and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"1\"),\" is the last.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function MiddleButton(props): Override {\\n    const { snapToProgress } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToProgress(0.5),\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-nextpage-direction-right--left--right--number--null\"}},\"\\uD83C\\uDF4A nextPage \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"h3\"},\"(direction: 'right' | 'left' = 'right') => number | null\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Returns the index of the next page in the given direction, or else \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"null\"),\" if no\\npage exists in that direction.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function NextIndicator(props): Override {\\n    const { nextPage } = usePageControls()\\n\\n    return {\\n        opacity: nextPage() === null ? 0.5 : 1,\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-previouspage---number--null\"}},\"\\uD83C\\uDF4A previousPage \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"h3\"},\"() => number | null\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Returns the index of the previous page in the hook's \\\"history\\\" of visited pages,\\nor else \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"null\"),\" if no page exists.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function BackIndicator(props): Override {\\n    const { previousPage } = usePageControls()\\n\\n    return {\\n        opacity: previousPage() === null ? 0.5 : 1,\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"example\"}},\"Example\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"import { Override } from 'framer'\\nimport { createPageControls } from 'framer-controller'\\n\\nconst usePageControls = createPageControls()\\n\\n// Sync the component with the usePageControls hook\\nexport function PageComponent(props): Override {\\n    const { currentPage, onChangePage } = usePageControls(props)\\n\\n    return {\\n        currentPage,\\n        onChangePage,\\n    }\\n}\\n\\n// Move to the next page (right)\\nexport function NextButton(props): Override {\\n    const { snapToNextPage, nextPage } = usePageControls()\\n\\n    return {\\n        opacity: nextPage('right') === null ? 0.3 : 1,\\n        onTap: () => snapToNextPage(),\\n    }\\n}\\n\\n// Move to the next page (left)\\nexport function PrevButton(props): Override {\\n    const { snapToNextPage, nextPage } = usePageControls()\\n\\n    return {\\n        opacity: nextPage('left') === null ? 0.3 : 1,\\n        onTap: () => snapToNextPage('left'),\\n    }\\n}\\n\\n// Show the current page number\\nexport function PageNumber(props): Override {\\n    const { currentPage, nextPage } = usePageControls()\\n\\n    return {\\n        text: currentPage + 1,\\n    }\\n}\\n\\n// Jump to start (progress 0)\\nexport function ToStart(props): Override {\\n    const { snapToProgress } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToProgress(0),\\n    }\\n}\\n\\n// Jump to end (progress 1)\\nexport function ToEnd(props): Override {\\n    const { snapToProgress } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToProgress(1),\\n    }\\n}\\n\\n// Show the previous page (in history)\\nexport function Undo(props): Override {\\n    const { snapToPreviousPage, previousPage } = usePageControls()\\n\\n    return {\\n        opacity: previousPage() === null ? 0.3 : 1,\\n        onTap: () => snapToPreviousPage(),\\n    }\\n}\\n\\n// Show a progress bar\\nexport function ProgressBar(props): Override {\\n    const { progress, currentPage, pages } = usePageControls()\\n\\n    const background =\\n        pages[currentPage] && pages[currentPage].props.background.initialValue\\n\\n    return {\\n        animate: {\\n            background,\\n            width: props.width * progress,\\n        },\\n    }\\n}\\n\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/stephenruiz/GitHub/framer-controller/docz/src/hooks/createPageControls.mdx"],"names":["React","MDXTag","layoutProps","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"createpagecontrols\"}}>{`createPageControls`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{` function returns a hook, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{`, that you\ncan use to control a page component. This hook provides an `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`alternative`}</MDXTag>{` to\nPageController.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Follow the steps below to get started. The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` section documents\nthe `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` hook in more detail. At the end of this page, you'll find\na complete example that uses each method.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-create-the-hook\"}}><MDXTag name=\"strong\" components={components} parentName=\"h3\">{`1.`}</MDXTag>{` Create the hook`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In an overrides file, import `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{` from the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`framer-controller`}</MDXTag>{`\nlibrary as shown below. Next, call `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{` and store the returned\nhook under the name `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`import { Override } from 'framer'\nimport { createPageControls } from 'framer-controller'\n\nconst usePageControls = createPageControls()\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you wish, you can also pass `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{` an object of (optional)\noptions.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`const usePageControls = createPageControls({\n    loop: true,\n    currentPage: 2,\n    history: [1, 2, 5, 2],\n})\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-connect-a-page-component\"}}><MDXTag name=\"strong\" components={components} parentName=\"h3\">{`2.`}</MDXTag>{` Connect a Page component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Next, override the page component you wish to control. Call `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{`\ninside of the override and pass the returned values `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`currentPage`}</MDXTag>{` and\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onChangePage`}</MDXTag>{` to the component.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-control-the-page-component\"}}><MDXTag name=\"strong\" components={components} parentName=\"h3\">{`3.`}</MDXTag>{` Control the Page component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`From here on, you can control the Page component in any other override by\ncalling the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` hook from your override and using the properties\nand methods that it returns.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function NextButton(props): Override {\n    const { snapToNextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToNextPage(),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"usepagecontrols\"}}>{`usePageControls`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once you've created a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` hook (using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{`), you\ncan call `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` from inside of an override. Doing do will return a\ncollection of `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`properties`}</MDXTag>{`, `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`event handlers`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`methods`}</MDXTag>{` for controlling\nthe Page component or interpreting its state.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage-1\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`At minimum, you should call this hook from your Page component's override as\nshown below. This will connect your Page component's `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`currentPage`}</MDXTag>{` to the hook's\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`currentPage`}</MDXTag>{`, as well as guarantee that these stay in sync as the user swipes\nbetween pages.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Note that in the example above, we're calling the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` hook with\nthe `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{` of the Page component. You only have to do this with the Page\ncomponent's props. In the other examples, we call this hook without any\nargument.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"properties\"}}>{`Properties`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-currentpage-number\"}}>{`🍊 currentPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`number`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The component's current page (as determined by the hook).`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageNumber(props): Override {\n    const { currentPage } = usePageControls()\n\n    return {\n        text: currentPage,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"event-handlers\"}}>{`Event Handlers`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-onchangepage-currentpage-number--void\"}}>{`🍊 onChangePage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`(currentPage: number) => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Updates the hook when the user changes the Page component's current page.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Though you can pass this property directly to your Page component's\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onChangePage`}</MDXTag>{` prop, you mmight want to do other things in your component's\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onChangePage`}</MDXTag>{` event, too. In that case, you can also call this method like\nthis:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage: (currentPage) => {\n            // other stuff\n            onChangePage(currentPage)\n        },\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"methods\"}}>{`Methods`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-snaptopage-index-number--0--void\"}}>{`🍊 snapToPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`(index: number = 0) => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the page at the provided index. Defaults to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function Page2Button(props): Override {\n    const { snapToPage, nextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToPage(2),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-snaptonextpage-direction-right--left--right--void\"}}>{`🍊 snapToNextPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`(direction: 'right' | 'left' = 'right') => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the next page in a given direction, either `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"right\"`}</MDXTag>{`\nor `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"left\"`}</MDXTag>{`. Defaults to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"right\"`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function RightButton(props): Override {\n    const { snapToNextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToNextPage(),\n    }\n}\n\nexport function LeftButton(props): Override {\n    const { snapToNextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToNextPage('left'),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-snaptopreviouspage---void\"}}>{`🍊 snapToPreviousPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`() => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the previous page in the hook's \"history\" of visited\npages.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PrevButton(props): Override {\n    const { snapToPreviousPage } = usePageControls()\n\n    return {\n        onTap: () => snapToPreviousPage(),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-snaptoprogress-progress-number--void\"}}>{`🍊 snapToProgress `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`(progress: number) => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the nearest page to a given \"progress\" value, where\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{` is the Page component's first page and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`1`}</MDXTag>{` is the last.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function MiddleButton(props): Override {\n    const { snapToProgress } = usePageControls()\n\n    return {\n        onTap: () => snapToProgress(0.5),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-nextpage-direction-right--left--right--number--null\"}}>{`🍊 nextPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`(direction: 'right' | 'left' = 'right') => number | null`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Returns the index of the next page in the given direction, or else `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`null`}</MDXTag>{` if no\npage exists in that direction.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function NextIndicator(props): Override {\n    const { nextPage } = usePageControls()\n\n    return {\n        opacity: nextPage() === null ? 0.5 : 1,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-previouspage---number--null\"}}>{`🍊 previousPage `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`() => number | null`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Returns the index of the previous page in the hook's \"history\" of visited pages,\nor else `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`null`}</MDXTag>{` if no page exists.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function BackIndicator(props): Override {\n    const { previousPage } = usePageControls()\n\n    return {\n        opacity: previousPage() === null ? 0.5 : 1,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`import { Override } from 'framer'\nimport { createPageControls } from 'framer-controller'\n\nconst usePageControls = createPageControls()\n\n// Sync the component with the usePageControls hook\nexport function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage,\n    }\n}\n\n// Move to the next page (right)\nexport function NextButton(props): Override {\n    const { snapToNextPage, nextPage } = usePageControls()\n\n    return {\n        opacity: nextPage('right') === null ? 0.3 : 1,\n        onTap: () => snapToNextPage(),\n    }\n}\n\n// Move to the next page (left)\nexport function PrevButton(props): Override {\n    const { snapToNextPage, nextPage } = usePageControls()\n\n    return {\n        opacity: nextPage('left') === null ? 0.3 : 1,\n        onTap: () => snapToNextPage('left'),\n    }\n}\n\n// Show the current page number\nexport function PageNumber(props): Override {\n    const { currentPage, nextPage } = usePageControls()\n\n    return {\n        text: currentPage + 1,\n    }\n}\n\n// Jump to start (progress 0)\nexport function ToStart(props): Override {\n    const { snapToProgress } = usePageControls()\n\n    return {\n        onTap: () => snapToProgress(0),\n    }\n}\n\n// Jump to end (progress 1)\nexport function ToEnd(props): Override {\n    const { snapToProgress } = usePageControls()\n\n    return {\n        onTap: () => snapToProgress(1),\n    }\n}\n\n// Show the previous page (in history)\nexport function Undo(props): Override {\n    const { snapToPreviousPage, previousPage } = usePageControls()\n\n    return {\n        opacity: previousPage() === null ? 0.3 : 1,\n        onTap: () => snapToPreviousPage(),\n    }\n}\n\n// Show a progress bar\nexport function ProgressBar(props): Override {\n    const { progress, currentPage, pages } = usePageControls()\n\n    const background =\n        pages[currentPage] && pages[currentPage].props.background.initialValue\n\n    return {\n        animate: {\n            background,\n            width: props.width * progress,\n        },\n    }\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}