{"remainingRequest":"/Users/stephenruiz/GitHub/framer-controller/docz/node_modules/docz/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/stephenruiz/GitHub/framer-controller/docz/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/stephenruiz/GitHub/framer-controller/docz/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/stephenruiz/GitHub/framer-controller/docz/src/hooks/createPageControls.mdx","dependencies":[{"path":"/Users/stephenruiz/GitHub/framer-controller/docz/src/hooks/createPageControls.mdx","mtime":1558189952691},{"path":"/Users/stephenruiz/GitHub/framer-controller/docz/node_modules/cache-loader/dist/cjs.js","mtime":1558188545990},{"path":"/Users/stephenruiz/GitHub/framer-controller/docz/node_modules/docz/node_modules/babel-loader/lib/index.js","mtime":1556118752233}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var layoutProps={};var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"createpagecontrols\"}},\"createPageControls\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"createPageControls\"),\" function returns a hook, \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\", that you\\ncan use to control a page component. This hook provides an \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"alternative\"),\" to\\nthe PageController.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"usage\"}},\"Usage\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To use this hook, first create a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\" hook by calling\\n\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"createPageControls\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"import { Override } from 'framer'\\nimport { createPageControls } from 'framer-controller'\\n\\nconst usePageControls = createPageControls()\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Next, override the page component you wish to control as shown below.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function PageComponent(props): Override {\\n    const { currentPage, onChangePage } = usePageControls(props)\\n\\n    return {\\n        currentPage,\\n        onChangePage,\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To control the page component through separate overrides, call the\\n\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"usePageControls\"),\" hook from your override, then destructure out and use the\\nmethods that it returns.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function NextButton(props): Override {\\n    const { snapToNextPage } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToNextPage(),\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"methods\"}},\"Methods\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"onchangepage\"}},\"onChangePage\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"(currentPage: number) => void\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Updates the hook when the user changes the Page component's current page.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"snaptopage\"}},\"snapToPage\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"(index: number = 0) => void\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Snaps the page component to the page at the provided index. Defaults to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"0\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function Page2Button(props): Override {\\n    const { snapToPage, nextPage } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToPage(2),\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"snaptonextpage\"}},\"snapToNextPage\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"(direction: 'right' | 'left' = 'right') => void\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Snaps the page component to the next page in a given direction, either \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"\\\"right\\\"\"),\"\\nor \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"\\\"left\\\"\"),\". Defaults to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"\\\"right\\\"\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function RightButton(props): Override {\\n    const { snapToNextPage } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToNextPage(),\\n    }\\n}\\n\\nexport function LeftButton(props): Override {\\n    const { snapToNextPage } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToNextPage('left'),\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"snaptopreviouspage\"}},\"snapToPreviousPage\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"() => void\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Snaps the page component to the previous page in the hook's \\\"history\\\" of visited\\npages.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function PrevButton(props): Override {\\n    const { snapToPreviousPage } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToPreviousPage(),\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"snaptoprogress\"}},\"snapToProgress\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"(progress: number) => void\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Snaps the page component to the nearest page to a given \\\"progress\\\" value, where\\n\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"0\"),\" is the Page component's first page and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"1\"),\" is the last.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function MiddleButton(props): Override {\\n    const { snapToProgress } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToProgress(0.5),\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"nextpage\"}},\"nextPage\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"(direction: 'right' | 'left' = 'right') => number | null\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Returns the index of the next page in the given direction, or else \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"null\"),\" if no\\npage exists in that direction.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function NextIndicator(props): Override {\\n    const { nextPage } = usePageControls()\\n\\n    return {\\n        opacity: nextPage() === null ? 0.5 : 1,\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"previouspage\"}},\"previousPage\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"() => number | null\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Returns the index of the previous page in the hook's \\\"history\\\" of visited pages,\\nor else \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"null\"),\" if no page exists.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function BackIndicator(props): Override {\\n    const { previousPage } = usePageControls()\\n\\n    return {\\n        opacity: previousPage() === null ? 0.5 : 1,\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"properties\"}},\"Properties\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"currentpage\"}},\"currentPage\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"number\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The component's current page (as determined by the hook).\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"export function PageNumber(props): Override {\\n    const { currentPage } = usePageControls()\\n\\n    return {\\n        text: currentPage,\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"example\"}},\"Example\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-tsx\"}},\"import { Override } from 'framer'\\nimport { createPageControls } from 'framer-controller'\\n\\nconst usePageControls = createPageControls()\\n\\n// Sync the component with the usePageControls hook\\nexport function PageComponent(props): Override {\\n    const { currentPage, onChangePage } = usePageControls(props)\\n\\n    return {\\n        currentPage,\\n        onChangePage,\\n    }\\n}\\n\\n// Move to the next page (right)\\nexport function NextButton(props): Override {\\n    const { snapToNextPage, nextPage } = usePageControls()\\n\\n    return {\\n        opacity: nextPage('right') === null ? 0.3 : 1,\\n        onTap: () => snapToNextPage(),\\n    }\\n}\\n\\n// Move to the next page (left)\\nexport function PrevButton(props): Override {\\n    const { snapToNextPage, nextPage } = usePageControls()\\n\\n    return {\\n        opacity: nextPage('left') === null ? 0.3 : 1,\\n        onTap: () => snapToNextPage('left'),\\n    }\\n}\\n\\n// Show the current page number\\nexport function PageNumber(props): Override {\\n    const { currentPage, nextPage } = usePageControls()\\n\\n    return {\\n        text: currentPage + 1,\\n    }\\n}\\n\\n// Jump to start (progress 0)\\nexport function ToStart(props): Override {\\n    const { snapToProgress } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToProgress(0),\\n    }\\n}\\n\\n// Jump to end (progress 1)\\nexport function ToEnd(props): Override {\\n    const { snapToProgress } = usePageControls()\\n\\n    return {\\n        onTap: () => snapToProgress(1),\\n    }\\n}\\n\\n// Show the previous page (in history)\\nexport function Undo(props): Override {\\n    const { snapToPreviousPage, previousPage } = usePageControls()\\n\\n    return {\\n        opacity: previousPage() === null ? 0.3 : 1,\\n        onTap: () => snapToPreviousPage(),\\n    }\\n}\\n\\n// Show a progress bar\\nexport function ProgressBar(props): Override {\\n    const { progress, currentPage, pages } = usePageControls()\\n\\n    const background =\\n        pages[currentPage] && pages[currentPage].props.background.initialValue\\n\\n    return {\\n        animate: {\\n            background,\\n            width: props.width * progress,\\n        },\\n    }\\n}\\n\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/stephenruiz/GitHub/framer-controller/docz/src/hooks/createPageControls.mdx"],"names":["React","MDXTag","layoutProps","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"createpagecontrols\"}}>{`createPageControls`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{` function returns a hook, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{`, that you\ncan use to control a page component. This hook provides an `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`alternative`}</MDXTag>{` to\nthe PageController.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To use this hook, first create a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` hook by calling\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createPageControls`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`import { Override } from 'framer'\nimport { createPageControls } from 'framer-controller'\n\nconst usePageControls = createPageControls()\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Next, override the page component you wish to control as shown below.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To control the page component through separate overrides, call the\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`usePageControls`}</MDXTag>{` hook from your override, then destructure out and use the\nmethods that it returns.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function NextButton(props): Override {\n    const { snapToNextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToNextPage(),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"methods\"}}>{`Methods`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"onchangepage\"}}>{`onChangePage`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(currentPage: number) => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Updates the hook when the user changes the Page component's current page.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"snaptopage\"}}>{`snapToPage`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(index: number = 0) => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the page at the provided index. Defaults to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function Page2Button(props): Override {\n    const { snapToPage, nextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToPage(2),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"snaptonextpage\"}}>{`snapToNextPage`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(direction: 'right' | 'left' = 'right') => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the next page in a given direction, either `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"right\"`}</MDXTag>{`\nor `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"left\"`}</MDXTag>{`. Defaults to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"right\"`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function RightButton(props): Override {\n    const { snapToNextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToNextPage(),\n    }\n}\n\nexport function LeftButton(props): Override {\n    const { snapToNextPage } = usePageControls()\n\n    return {\n        onTap: () => snapToNextPage('left'),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"snaptopreviouspage\"}}>{`snapToPreviousPage`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`() => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the previous page in the hook's \"history\" of visited\npages.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PrevButton(props): Override {\n    const { snapToPreviousPage } = usePageControls()\n\n    return {\n        onTap: () => snapToPreviousPage(),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"snaptoprogress\"}}>{`snapToProgress`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(progress: number) => void`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Snaps the page component to the nearest page to a given \"progress\" value, where\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{` is the Page component's first page and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`1`}</MDXTag>{` is the last.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function MiddleButton(props): Override {\n    const { snapToProgress } = usePageControls()\n\n    return {\n        onTap: () => snapToProgress(0.5),\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"nextpage\"}}>{`nextPage`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(direction: 'right' | 'left' = 'right') => number | null`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Returns the index of the next page in the given direction, or else `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`null`}</MDXTag>{` if no\npage exists in that direction.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function NextIndicator(props): Override {\n    const { nextPage } = usePageControls()\n\n    return {\n        opacity: nextPage() === null ? 0.5 : 1,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"previouspage\"}}>{`previousPage`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`() => number | null`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Returns the index of the previous page in the hook's \"history\" of visited pages,\nor else `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`null`}</MDXTag>{` if no page exists.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function BackIndicator(props): Override {\n    const { previousPage } = usePageControls()\n\n    return {\n        opacity: previousPage() === null ? 0.5 : 1,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"properties\"}}>{`Properties`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"currentpage\"}}>{`currentPage`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`number`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The component's current page (as determined by the hook).`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`export function PageNumber(props): Override {\n    const { currentPage } = usePageControls()\n\n    return {\n        text: currentPage,\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`import { Override } from 'framer'\nimport { createPageControls } from 'framer-controller'\n\nconst usePageControls = createPageControls()\n\n// Sync the component with the usePageControls hook\nexport function PageComponent(props): Override {\n    const { currentPage, onChangePage } = usePageControls(props)\n\n    return {\n        currentPage,\n        onChangePage,\n    }\n}\n\n// Move to the next page (right)\nexport function NextButton(props): Override {\n    const { snapToNextPage, nextPage } = usePageControls()\n\n    return {\n        opacity: nextPage('right') === null ? 0.3 : 1,\n        onTap: () => snapToNextPage(),\n    }\n}\n\n// Move to the next page (left)\nexport function PrevButton(props): Override {\n    const { snapToNextPage, nextPage } = usePageControls()\n\n    return {\n        opacity: nextPage('left') === null ? 0.3 : 1,\n        onTap: () => snapToNextPage('left'),\n    }\n}\n\n// Show the current page number\nexport function PageNumber(props): Override {\n    const { currentPage, nextPage } = usePageControls()\n\n    return {\n        text: currentPage + 1,\n    }\n}\n\n// Jump to start (progress 0)\nexport function ToStart(props): Override {\n    const { snapToProgress } = usePageControls()\n\n    return {\n        onTap: () => snapToProgress(0),\n    }\n}\n\n// Jump to end (progress 1)\nexport function ToEnd(props): Override {\n    const { snapToProgress } = usePageControls()\n\n    return {\n        onTap: () => snapToProgress(1),\n    }\n}\n\n// Show the previous page (in history)\nexport function Undo(props): Override {\n    const { snapToPreviousPage, previousPage } = usePageControls()\n\n    return {\n        opacity: previousPage() === null ? 0.3 : 1,\n        onTap: () => snapToPreviousPage(),\n    }\n}\n\n// Show a progress bar\nexport function ProgressBar(props): Override {\n    const { progress, currentPage, pages } = usePageControls()\n\n    const background =\n        pages[currentPage] && pages[currentPage].props.background.initialValue\n\n    return {\n        animate: {\n            background,\n            width: props.width * progress,\n        },\n    }\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}